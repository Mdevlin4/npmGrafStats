version: '3.8'
services:
  npmplus:
    container_name: npmplus
    image: zoeyvid/npmplus
    restart: always
    network_mode: host
    volumes:
      - "/opt/npm:/data"
    environment:
      - "TZ=Europe/Berlin" # set timezone, required
      - "LOGROTATE=true" # required for npmgrafstats
      # for more see https://github.com/ZoeyVid/NPMplus/blob/develop/compose.yaml

  npmgraf:
    image: smilebasti/npmgrafstats:plus-latest # change to ghcr.io/smilebasti/npmgrafstats if you prefer Github Container Registry
    restart: unless-stopped
    environment:
      INTERNAL_LOGS: '<set TRUE or FALSE>' # see Github wiki for more information
      MONITORING_LOGS: '<set TRUE or FALSE>' # see Github wiki for more information
      INFLUX_HOST: '<replace>:8086' # use host IP
      INFLUX_BUCKET: 'npmgrafstats'
      INFLUX_ORG: 'npmgrafstats'
      INFLUX_TOKEN: '<replace>' # insert after first run and manual token creation
    volumes:
      - /opt/npm/nginx/access.log:/access.log
      - ./geolite:/geolite
      - ./monitoringips.txt:/monitoringips.txt # optional only mount if preexists and a wanted feature
    depends_on:
      - geoipupdate
      - npmplus

  influxdb:
    image: influxdb:2.7-alpine
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: 'setup'
      DOCKER_INFLUXDB_INIT_USERNAME: '<replace>'
      DOCKER_INFLUXDB_INIT_PASSWORD: '<replace>' # atleast 8 characters
      DOCKER_INFLUXDB_INIT_ORG: 'npmgrafstats'
      DOCKER_INFLUXDB_INIT_BUCKET: 'npmgrafstats'
    volumes:
      # Mount for influxdb data directory and configuration
      - ./influxdbv2:/var/lib/influxdb2
    ports:
      - '8086:8086'

  geoipupdate:
    image: maxmindinc/geoipupdate
    restart: unless-stopped
    environment:
      GEOIPUPDATE_ACCOUNT_ID: '<replace>'
      GEOIPUPDATE_LICENSE_KEY: '<replace>'
      GEOIPUPDATE_EDITION_IDS: 'GeoLite2-City  GeoLite2-ASN'  #GeoLite2-ASN is optional
      GEOIPUPDATE_FREQUENCY: 24
    volumes:
      - ./geolite:/usr/share/GeoIP

  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    ports: 
      - '8000:8000'
      - '9000:9000'
      - '9443:9443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data 

  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./grafana-storage:/var/lib/grafana # after start: sudo chown 472:472 grafana-storage 
